// <auto-generated />
using System;
using Cashflow.Management.Data.AppContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cashflow.Management.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cashflow.Management.Domain.Entities.CashStatement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Inflow")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Outflow")
                        .HasColumnType("numeric");

                    b.Property<bool>("isOpening")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("CashStatements");
                });

            modelBuilder.Entity("Cashflow.Management.Domain.Entities.ConsolidatedCashBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ConsolidatedCashBalances");
                });

            modelBuilder.Entity("Cashflow.Management.Domain.Entities.ConsolidatedTransactionHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CashStatementId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TransactionId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CashStatementId");

                    b.ToTable("ConsolidatedTransactionHistories");
                });

            modelBuilder.Entity("Cashflow.Management.Domain.Entities.ConsolidatedTransactionHistory", b =>
                {
                    b.HasOne("Cashflow.Management.Domain.Entities.CashStatement", "CashStatement")
                        .WithMany("Transactions")
                        .HasForeignKey("CashStatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashStatement");
                });

            modelBuilder.Entity("Cashflow.Management.Domain.Entities.CashStatement", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
